name: Deploy to NuGet

on:
  push:
    tags:
      - "v*"

env:
    nuget: "https://api.nuget.org/v3/index.json"

jobs:
  deploy:
    name: Deploy to NuGet
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        package:
          - project: TkSharp
            authors: ArchLeaders
            description: Utility library for mod merging and management.
            readme: ./Readme.md
            icon: ./Icon.png
            repo: https://github.com/TKMM-Team/TkSharp
            spdx: MIT
            tags: totk;zelda;zeldamods
          - project: TkSharp.Core
            authors: ArchLeaders
            description: Utility library for mod merging and management.
            readme: ./Readme.md
            icon: ./Icon.png
            repo: https://github.com/TKMM-Team/TkSharp
            spdx: MIT
            tags: totk;zelda;zeldamods
          - project: TkSharp.Data.Embedded
            authors: ArchLeaders
            description: Utility library for mod merging and management.
            readme: ./Readme.md
            icon: ./Icon.png
            repo: https://github.com/TKMM-Team/TkSharp
            spdx: MIT
            tags: totk;zelda;zeldamods
          - project: TkSharp.Merging
            authors: ArchLeaders
            description: Utility library for mod merging and management.
            readme: ./Readme.md
            icon: ./Icon.png
            repo: https://github.com/TKMM-Team/TkSharp
            spdx: MIT
            tags: totk;zelda;zeldamods
            
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "9.x.x"

      - name: Restore
        shell: bash
        run: |-
          dotnet restore ${{ matrix.package.project }}/${{ matrix.package.project }}.csproj

      - name: Build
        shell: bash
        run: |-
          dotnet build src/${{ matrix.package.project }}/${{ matrix.package.project }}.csproj \
          --no-restore                                                                        \
          -c Release                                                                          \

      - name: Fetch Version
        id: version
        uses: battila7/get-version-action@v2

      - name: Package
        shell: bash
        run: |
          dotnet pack src/${{ matrix.package.project }}/${{ matrix.package.project }}.csproj \
          --no-restore                                                                       \
          -c Release                                                                         \
          -o ./build-output/                                                                 \
          -p:Authors="${{ matrix.package.author }}"                                                    \
          -p:Description="${{ matrix.package.description }}"                                            \
          -p:PackageLicenseExpression="${{ matrix.package.spdx }}"                                      \
          -p:PackageProjectUrl="${{ matrix.package.repo }}"                                             \
          -p:PackageReadmeFile="${{ matrix.package.readme }}"                                           \
          -p:PackageIcon="${{ matrix.package.icon }}"                                                   \
          -p:PackageTags='"${{ matrix.package.tags }}"'                                                 \
          -p:PackageVersion="${{ steps.version.outputs.version-without-v }}"                 \
          -p:RepositoryUrl="${{ matrix.package.repo }}"                                                 \

      - name: Push
        shell: bash
        run: |-
          dotnet nuget push ./build-output/*.nupkg \
          -k ${{ secrets.NUGET_AUTH }}             \
          -s ${{ env.nuget }}                      \
